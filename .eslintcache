[{"/Users/pveiga/repos/wisemapping-react/src/Footer.js":"1","/Users/pveiga/repos/wisemapping-react/src/Header.js":"2","/Users/pveiga/repos/wisemapping-react/src/index.js":"3","/Users/pveiga/repos/wisemapping-react/src/LoginPage.js":"4"},{"size":1747,"mtime":1606529689598,"results":"5","hashOfConfig":"6"},{"size":1557,"mtime":1606529996629,"results":"7","hashOfConfig":"6"},{"size":554,"mtime":1606522800588,"results":"8","hashOfConfig":"6"},{"size":3146,"mtime":1606530371412,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xegajf",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/pveiga/repos/wisemapping-react/src/Footer.js",[],"/Users/pveiga/repos/wisemapping-react/src/Header.js",[],"/Users/pveiga/repos/wisemapping-react/src/index.js",[],"/Users/pveiga/repos/wisemapping-react/src/LoginPage.js",["19"],"import React from 'react';\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport { createIntl, createIntlCache, FormattedMessage, IntlProvider } from 'react-intl'\n\nclass ConfigStatusMessage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      enabled: props.enabled\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"db-warn-msg\">\n        <p>\n          <FormattedMessage id=\"NO_PRODUCTION_DATABASE_CONFIGURED\" defaultMessage=\"Warning: Although HSQLDB is bundled with WiseMapping by default during the installation, we do not recommend this database for production use. Please consider using MySQL 5.7 instead. You can find more information how to configure MySQL\" description=\"Missing production database configured\" /><a href=\"https://wisemapping.atlassian.net/wiki/display/WS/Database+Configuration\"> here</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      staySignIn: false\n    };\n\n  }\n\n  render() {\n    return (\n      <div class=\"wrapper\">\n        <div class=\"content\">\n          <h1><FormattedMessage id=\"WELCOME\" defaultMessage=\"Welcome\" /></h1>\n          <p><FormattedMessage id=\"LOG_INTO\" defaultMessage=\"Log Into Your Account\" /></p>\n\n          <form action=\"/c/perform-login\" method=\"POST\">\n            <input type=\"email\" name=\"username\" placeholder={intl.formatMessage({ id: \"EMAIL\", defaultMessage: 'Email' })} value={this.state.value} onChange={this.handleInputChange} required />\n            <input type=\"password\" name=\"password\" placeholder={intl.formatMessage({ id: \"PASSWORD\", defaultMessage: 'Password' })} value={this.state.value} onChange={this.handleInputChange} required />\n\n            <div>\n              <input name=\"_spring_security_remember_me\" id=\"staySignIn\" type=\"checkbox\"/>\n              <label for=\"staySignIn\"><FormattedMessage id=\"REMEMBER_ME\" defaultMessage=\"Remember me\" /></label>\n            </div>\n\n            <input type=\"submit\" value={intl.formatMessage({ id: \"SING_IN\", defaultMessage: 'Sign In' })} />\n          </form>\n          <a href=\"/c/user/resetPassword\"><FormattedMessage id=\"FORGOT_PASSWORD\" defaultMessage=\"Forgot Password ?\" /></a>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Internationalize setup ....\nconst cache = createIntlCache()\n\n// @Todo: Review ...\nvar intl = null;\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const messages = props.messages;\n    const locale = props.locale;\n    this.state = {\n      locale: locale,\n      message: messages\n    };\n\n    intl = createIntl(\n      {\n        locale: locale,\n        defaultLocale: 'en'\n      },\n      messages,\n      cache\n    )\n  }\n\n  render() {\n    return (\n      <IntlProvider locale={this.state.locale} defaultLocale=\"en\" messages={this.state.messages}>\n        <div>\n          <Header type='login' />\n          <LoginForm />\n          {/* <ConfigStatusMessage enabled='true' /> */}\n          <Footer />\n        </div>\n      </IntlProvider>\n    );\n  }\n}\nexport default LoginPage;\n\n",{"ruleId":"20","severity":1,"message":"21","line":6,"column":7,"nodeType":"22","messageId":"23","endLine":6,"endColumn":26},"no-unused-vars","'ConfigStatusMessage' is defined but never used.","Identifier","unusedVar"]